##################### Generate plots for output ###################
######### PLOT with raw data + median and Confidence Interval ########
medianplot <- ggplot(df_summary, aes(x = Condition, y = median, color=Condition))+geom_jitter(data = df_raw_data, aes(x=Condition, y=value), position=position_jitter(0.3), cex=1, alpha=0.4)+
geom_linerange(aes(ymin = ci_median_lo, ymax = ci_median_hi), color="black", size =1, data = df_summary)+
geom_point(aes(y = median), shape = 21,color = "black",fill=NA,size = 3, data = df_summary)+
ggtitle(paste("Median and ",Confidence_Percentage,"%CI",sep=""))  +
ylab("Value [-]")+theme_light(base_size = 14) +
theme(panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) + theme(axis.text.y = element_text(size=12))+theme(legend.position="none")+
#Set the axis limits here - autoscale if not set
#ylim(-0.02,0.3)+
coord_flip()
########### PLOT with distribution of differences, median difference and Confidence Interval ########
effectplot <- ggplot(df_differences, aes(x = Condition, y = diff_median))+
geom_flat_violin(aes(x=Condition, fill=Condition),position = position_nudge(x = 0, y = 0), color=NA,scale = "width", alpha =0.7,data = df_differences)+ geom_linerange(aes(y= diff_median, ymin = ci_median_lo, ymax = ci_median_hi), color="black", size =1, data = df_diff_summary)+
geom_point(aes(y = diff_median), shape = 21,color = "black",fill=NA,size = 3,data = df_diff_summary)+
geom_hline(yintercept = 0, col = "black", size = .5) +
ggtitle(paste("Difference and ",Confidence_Percentage,"%CI",sep=""))+ylab("Difference [-]")+theme_light(base_size = 14) + theme(panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) + theme(axis.text.y = element_text(size=12))+
#Set the axis limits here - autoscale if not set
#ylim(-0.05,0.3)+
coord_flip()
grid.arrange(medianplot, effectplot, ncol=2, nrow=1)
View(df_all_new_medians)
View(df_diff_summary)
View(df_differences)
install.packages(c("MASS", "Matrix", "Rcpp", "XML", "bindrcpp", "classInt", "cluster", "curl", "data.table", "digest", "foreign", "hexbin", "httpuv", "kernlab", "later", "maps", "mgcv", "mvtnorm", "openssl", "processx", "rlang", "robustbase", "rpart", "sf", "sourcetools", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "xml2", "yaml"))
install.packages(c("MASS", "Matrix", "Rcpp", "XML", "bindrcpp", "classInt", "cluster", "curl", "data.table", "digest", "foreign", "hexbin", "httpuv", "kernlab", "later", "maps", "mgcv", "mvtnorm", "openssl", "processx", "rlang", "robustbase", "rpart", "sf", "sourcetools", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "xml2", "yaml"))
install.packages(c("MASS", "Matrix", "Rcpp", "XML", "bindrcpp", "classInt", "cluster", "curl", "data.table", "digest", "foreign", "hexbin", "httpuv", "kernlab", "later", "maps", "mgcv", "mvtnorm", "openssl", "processx", "rlang", "robustbase", "rpart", "sf", "sourcetools", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "xml2", "yaml"))
install.packages(c("MASS", "Matrix", "Rcpp", "XML", "bindrcpp", "classInt", "cluster", "curl", "data.table", "digest", "foreign", "hexbin", "httpuv", "kernlab", "later", "maps", "mgcv", "mvtnorm", "openssl", "processx", "rlang", "robustbase", "rpart", "sf", "sourcetools", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "xml2", "yaml"))
install.packages(c("MASS", "Matrix", "Rcpp", "XML", "bindrcpp", "classInt", "cluster", "curl", "data.table", "digest", "foreign", "hexbin", "httpuv", "kernlab", "later", "maps", "mgcv", "mvtnorm", "openssl", "processx", "rlang", "robustbase", "rpart", "sf", "sourcetools", "stringi", "stringr", "survival", "tibble", "tidyr", "tidyselect", "xml2", "yaml"))
shiny::runApp('surfdrive/Shiny-project/ComPlot')
runApp('surfdrive/Shiny-project/ComPlot')
shiny::runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
shiny::runApp('surfdrive/Shiny-project/ComPlotta')
shiny::runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
runApp('surfdrive/Shiny-project/ComPlotta')
shiny::runApp('surfdrive/Shiny-project/Plot-timelapse-data')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
View(df_all_new_medians)
View(df_boostrapped_median)
View(df_diff_summary)
View(df_boostrapped_median)
View(df_all_new_medians)
View(df_all_new_medians)
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/ComPlotTa')
runApp('surfdrive/Shiny-project/ComPlotTa')
shiny::runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
shiny::runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
df_raw_data
df_raw_data$indentifier <- "control"
df_raw_data
shiny::runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
shiny::runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
library(shiny)
library(data.table)
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
runApp('surfdrive/Shiny-project/Multiple-file-upload')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist_v1')
runApp('surfdrive/Shiny-project/PlotTwist_v1')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
install.packages("ggplot2")
install.packages("tidyverse")
shiny::runGitHub('PlotsOfData', 'JoachimGoedhart')
shiny::runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runGitHub('PlotsOfData', 'JoachimGoedhart')
shiny::runGitHub('PlotTwist', 'JoachimGoedhart')
shiny::runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/Plotsofdata')
shiny::runApp('surfdrive/Shiny-project/PlotsOfDifferences')
shiny::runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
shiny::runApp('surfdrive/Shiny-project/PlotsOfDifferences')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/Plotsofdifferences')
runApp('surfdrive/Shiny-project/Plotsofdata')
runApp('surfdrive/Shiny-project/Plotsofdata')
shiny::runApp()
qt((1-.95)/2, n - 1)
qt((1-.95)/2, 4 - 1)
qt((1-.95)/2, 1000000000 - 1)
qt((.95)/2, 1000000000 - 1)
qt((1-.95)/2, 1000000000 - 1)
qt((1-.95)/2, 1 - 1)
qt((1-.95)/2, 2 - 1)
qt((1-.95)/2, 10000000000000 - 1)
qt((1-.95)/2, 10000000000000 - 1)/1.96
qt((1-.95)/2, 10000000000000 - 1)/-1.96
n()
n
x <- (2,3,4,5,6)
x <- c(2,3,4,5,6)
x
median(x)
n(x)
n()
count(x)
n
n()
?n
?n()
??n
??n()
length(x)
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
median(x) - 1.58 * IQR / sqrt(length(x))*correction
}
notch(x)
notch(x)
notch(x)
notch(x)
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- (median(x) - 1.58 * IQR(x) / sqrt(length(x))*correction)
return(y)
}
notch(x)
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- (median(x) - 1.58 * IQR(x) / sqrt(length(x))*correction)
return(correction)
}
notch(x)
length(x)
qt((1-.95)/2, 5 - 1)/-1.96
x <- c(1,2,3)
qt((1-.95)/2, 5 - 1)/-1.96
qt((1-.95)/2, 3 - 1)/-1.96
notch(x)
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- (median(x) - 1.58 * IQR(x) / sqrt(length(x))*correction)
return(y)
}
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- (median(x) - 1.58 * IQR(x) / sqrt(length(x))*correction)
return(y)
}
notch(x)
x
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- (median(x) - 1.58 * IQR(x) / sqrt(length(x)))
y <- y*correction
return(y)
}
notch(x)
notch = function(x) {
correction=qt((1-.95)/2, length(x) - 1)/-1.96
y <- median(x) - (1.58 * IQR(x)*correction / sqrt(length(x)))
return(y)
}
notch(x)
IQR(x)
qt((1-.95)/2, length(x) - 1)/-1.96
correction <- qt((1-.95)/2, length(x) - 1)/-1.96
qt((1-.95)/2, length(x) - 1)/-1.96
length(x)
sqrt(length(x))
(1.58 * IQR(x)*correction / sqrt(length(x)))
median(x)
notch(x)
notch = function(x) {
correction <- qt((1-.95)/2, length(x) - 1)/-1.96
correction <- 1
y <- median(x) - (1.58 * IQR(x)*correction / sqrt(length(x)))
return(y)
}
notch(x)
notch = function(x) {
correction <- qt((1-.95)/2, length(x) - 1)/-1.96
y <- median(x) - (1.58 * IQR(x)*correction / sqrt(length(x)))
return(y)
}
notch(x)
notch_low = function(x) {
correction <- qt((1-.95)/2, length(x) - 1)/-1.96
y <- median(x) - (1.58 * IQR(x)*correction / sqrt(length(x)))
return(y)
}
notch_hi = function(x) {
correction <- qt((1-.95)/2, length(x) - 1)/-1.96
y <- median(x) + (1.58 * IQR(x)*correction / sqrt(length(x)))
return(y)
}
notch_low(x)
notch_hi(x)
median(x)
setwd("~/surfdrive/Shiny-project/PlotsOfData")
df_tidy_example <- read.csv("Data_tidy_example.csv", na.strings = "")
df_tidy_selected <- df_tidy_example %>% select(Condition = conditions , Value = Activity) %>% filter(!is.na(Value))
df_summary <- df_tidy_selected %>%
group_by(Condition) %>%
summarise(n = n(),
mean = mean(Value),
SD = sd(Value),
median = median(Value),
MAD = mad(Value, constant=1),
IQR = IQR(Value))
p <- ggplot(data=df_tidy_selected, aes(x= Condition, y= Value))
p <-  p + geom_boxplot(notch=TRUE)
p <- p+geom_point(data=df_tidy_selected)
require(magrittr)
require(dplyr)
require(ggplot)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
df_tidy_example <- read.csv("Data_tidy_example.csv", na.strings = "")
df_tidy_selected <- df_tidy_example %>% select(Condition = conditions , Value = Activity) %>% filter(!is.na(Value))
df_summary <- df_tidy_selected %>%
group_by(Condition) %>%
summarise(n = n(),
mean = mean(Value),
SD = sd(Value),
median = median(Value),
MAD = mad(Value, constant=1),
IQR = IQR(Value))
p <- ggplot(data=df_tidy_selected, aes(x= Condition, y= Value))
p <-  p + geom_boxplot(notch=TRUE)
p <- p+geom_point(data=df_tidy_selected)
p
gg <-  ggplot_build(p)
gg$data[[1]]$notchlower <- tapply(df_tidy_selected$Value, df_tidy_selected$Condition, notch_low)
gg$data[[1]]$notchupper <- tapply(df_tidy_selected$Value, df_tidy_selected$Condition, notch_hi)
p
p2 <- plot(ggplot_gtable(gg))
p2
plot(ggplot_gtable(gg))
p
lot(ggplot_gtable(gg))
plot(ggplot_gtable(gg))
p
p2 <- plot(ggplot_gtable(gg))
p2
p
p2
p2 <- ggplot_gtable(gg)
p
p2
plot(p2)
plot(p)
plot(p2)
plot(ggplot_gtable(gg))
gg <-  ggplot_build(p)
gg$data[[1]]
gg$data[[1]]$notchlower
shiny::runApp()
